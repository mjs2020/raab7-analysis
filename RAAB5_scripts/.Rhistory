a_case_618_360 = case_when(((raab$right_operated==1 & raab$left_operable_360==1 & (raab$right_distance_acuity_presenting<=0.47)) | (raab$left_operated==1 & raab$right_operable_360==1 & (raab$left_distance_acuity_presenting<=0.47)))  ~ 1, TRUE ~ 0),
b_case_618 = case_when((raab$right_operated==1 & raab$left_operated==1 & ifelse(as.numeric(raab$right_distance_acuity_presenting) < as.numeric(raab$left_distance_acuity_presenting),(raab$right_distance_acuity_presenting<=0.47),(raab$left_distance_acuity_presenting<=0.47))) ~ 1, TRUE ~ 0)
)
raab$bilateral_operable_cataract<-(raab$right_operable_360==1 & raab$left_operable_360)+0
source("PREV_14_RAAB5.R")
raab$denom.618.persons<-(raab$x_case_618==1 | raab$y_case_618==1 | raab$z_case_618==1)+0
raab$denom.660.persons<-(raab$x_case_660==1 | raab$y_case_660==1 | raab$z_case_660==1)+0
raab$denom.360.persons<-(raab$x_case_360==1 | raab$y_case_360==1 | raab$z_case_360==1)+0
raab$ecsc.618.618.num.persons<-(raab$a_case_618_618==1 | raab$b_case_618==1)+0
raab$ecsc.618.660.num.persons<-(raab$a_case_618_660==1 | raab$b_case_618==1)+0
raab$ecsc.618.360.num.persons<-(raab$a_case_618_360==1 | raab$b_case_618==1)+0
raab$csc.618.num.persons<-(raab$x_case_618==1 | raab$y_case_618==1)+0
raab$csc.660.num.persons<-(raab$x_case_660==1 | raab$y_case_660==1)+0
raab$csc.360.num.persons<-(raab$x_case_360==1 | raab$y_case_360==1)+0
denom.thresh<-c(rep("618",2),rep("660",2),rep("360",2))
num.thresh<-c(rep(c("csc","ecsc_618"),3))
prev14<-as.data.frame(cbind(denom.thresh,num.thresh))
prev14$male.denom[prev14$denom.thresh=="618"]<-sum(raab$x_case_618[raab$gender=="male"],na.rm=T)+sum(raab$y_case_618[raab$gender=="male"],na.rm=T)+sum(raab$z_case_618[raab$gender=="male"],na.rm=T)
source("PREV_14_RAAB5.R")
raab$age.groups.tens
# v1 12th Aug 2021
# Script to create new variables to support major data analyses and visualisations (age group and visual impariment category)
# Categorize continuous age variable into 10-year binds in RAAB data file
age.groups.tens<-c("50-59","60-69","70-79","80+")
raab$age.groups.tens<-cut(raab$age,breaks=c(49,59,69,79,150),labels=age.groups.tens)
# Categorize continuous age variable into 10-year bins in population census file
popfives$age.groups.tens<-cut(popfives$ageStart,breaks=c(49,59,69,79,110),labels=age.groups.tens)
# Extract gender-specific subsets of census data
female.subpop<-popfives[popfives$gender=="female",]
male.subpop<-popfives[popfives$gender=="male",]
# Charatcerise study participant by visual acuity according to WHO thresholds
# Define numerators and denominators
raab$vi.denom <- case_when(raab$exam_status=="exam_status_examined" ~ 1, TRUE ~ 0)
#Bilateral VI cases by WHO categories using Peek Acuity logMAR vaules
raab <- raab %>% mutate(
blind = case_when(raab$right_distance_acuity_presenting>=1.8 & raab$left_distance_acuity_presenting>=1.8 ~ 1, TRUE ~ 0),
severe.vi = case_when(pmin(raab$right_distance_acuity_presenting, raab$left_distance_acuity_presenting)==1.3 ~ 1, TRUE ~ 0),
moderate.vi = case_when(pmin(raab$right_distance_acuity_presenting, raab$left_distance_acuity_presenting)==1.0 ~ 1, TRUE ~ 0),
)
raab <- raab %>% mutate(vi.levels = case_when(moderate.vi==1 ~ "moderate.vi", severe.vi==1 ~ "severe.vi", blind==1 ~ "blind"))
vi.levels<-c("blind","severe.vi","moderate.vi","mild.vi")
right.vi.levels<-c("right.blind","right.severe.vi","right.moderate.vi","right.mild.vi")
left.vi.levels<-c("left.blind","left.severe.vi","left.moderate.vi","left.mild.vi")
right.pinva.levels<-c("right.pinva.blind","right.pinva.severe.vi","right.pinva.moderate.vi","right.pinva.mild.vi")
left.pinva.levels<-c("left.pinva.blind","left.pinva.severe.vi","left.pinva.moderate.vi","left.pinva.mild.vi")
right.re.levels<-c("right.re.blind","right.re.severe.vi","right.re.moderate.vi","right.re.mild.vi")
left.re.levels<-c("left.re.blind","left.re.severe.vi","left.re.moderate.vi","left.re.mild.vi")
re.vi.levels<-c("re.blind","re.severe.vi","re.moderate.vi","re.mild.vi")
vi.tab<-as.data.frame(cbind(vi.levels,right.vi.levels,left.vi.levels,right.pinva.levels,left.pinva.levels,right.re.levels,left.re.levels,re.vi.levels))
#List causes of blindness to ensure all get included, not just the ones identified in the survey.
raab.cause <- c("poor_vision_cause_uncorrected_refractive_error",
"poor_vision_cause_aphakia_uncorrected",
"poor_vision_cause_cataract_untreated",
"poor_vision_cause_cataract_surgical_complications",
"poor_vision_cause_trachomatous_corneal_opacity",
"poor_vision_cause_other_corneal_opacity",
"poor_vision_cause_phthisis",
"poor_vision_cause_onchocerciasis",
"poor_vision_cause_glaucoma",
"poor_vision_cause_diabetic_retinopathy",
"poor_vision_cause_age_related_macular_degeneration",
"poor_vision_cause_other_posterior_segment_disease",
"poor_vision_cause_other_globe_or_cns_abnormalities")
#Define cumulative visual accuity counts
raab <- raab %>% mutate(
moderate.cumulative = case_when(pmin(raab$right_distance_acuity_presenting,raab$left_distance_acuity_presenting)>=1.0 ~ 1, TRUE ~ 0),
severe.cumulative = case_when(pmin(raab$right_distance_acuity_presenting, raab$left_distance_acuity_presenting)>=1.3 ~ 1, TRUE ~ 0),
blind.cumulative = case_when(pmin(raab$right_distance_acuity_presenting,raab$left_distance_acuity_presenting)>=1.8 ~ 1, TRUE ~ 0)
)
raab <- raab %>% mutate(
cumulative.vi = case_when(moderate.cumulative==1 ~ "moderate.cumulative", severe.cumulative==1 ~ "severe.cumulative", blind.cumulative==1 ~ "blind.cumulative")
)
cumulative.vi<-c("blind.cumulative","severe.cumulative","moderate.cumulative","mild.cumulative")
#Unilateral visual impairment
raab <- raab %>% mutate(
blind.unilat = case_when((raab$right_distance_acuity_presenting>=1.8 & raab$left_distance_acuity_presenting==0.47)  |
(raab$left_distance_acuity_presenting>=1.8 & raab$right_distance_acuity_presenting==0.47) ~ 1, TRUE ~ 0),
severe.unilat = case_when((raab$right_distance_acuity_presenting==1.3 & raab$left_distance_acuity_presenting==0.47)  |
(raab$left_distance_acuity_presentin==1.3 & raab$right_distance_acuity_presenting==0.47) ~ 1, TRUE ~ 0),
moderate.unilat = case_when((raab$right_distance_acuity_presenting==1.0 & raab$left_distance_acuity_presenting==0.47)  |
(raab$left_distance_acuity_presenting==1.0 & raab$right_distance_acuity_presenting==0.47) ~ 1, TRUE ~ 0)
)
raab <- raab %>% mutate(
unilat.vi = case_when(moderate.unilat==1 ~ "moderate.unilat", severe.unilat==1 ~ "severe.unilat", blind.unilat==1 ~ "blind.unilat")
)
unilat.vi<-c("blind.unilat","severe.unilat","moderate.unilat","mild.unilat")
source("PREV_14_RAAB5.R")
source("ASA_7_RAAB5.R")
asa7a.nice.names<-asa7[,c("vi.level","female.n","female.pct","male.n","male.pct","total.n","total.pct")]
write.table(asa7a.nice.names,file=paste0(outdir,"/asa7a.csv"),row.names=F,col.names=T,sep=",")
names(asa7a.nice.names)<-c(" ","n","%","n","%","n","%")
knitr::kable(asa7a.nice.names, booktabs=T, linesep = "", caption = "Sample prevalence of blindness (PVA <3/60), severe (PVA <6/60), moderate (PVA <6/18) and mild (PVA <6/12) vision impairment in the better eye due to cataract") %>%
kable_styling(full_width=T,latex_options = "HOLD_position") %>%
row_spec(0,italic=TRUE) %>%
column_spec(1,width='4cm') %>%
add_header_above(c("Vision impairment" = 1, "Female" = 2, "Male" = 2, "Total" = 2),bold=T)
source("PREV_14_RAAB5.R")
source("ASA_7_RAAB5.R")
asa7b.int<-asa7[,c("vi.level","female.adj.pct","female.adj.lci","female.adj.uci","male.adj.pct","male.adj.lci","male.adj.uci","total.adj.pct","total.adj.lci","total.adj.uci","extrapolated.female.n","extrapolated.male.n","extrapolated.total.n")]
asa7b.int$male.adj.ci<-paste0(asa7b.int$male.adj.lci,"-",asa7b.int$male.adj.uci)
asa7b.int$female.adj.ci<-paste0(asa7b.int$female.adj.lci,"-",asa7b.int$female.adj.uci)
asa7b.int$total.adj.ci<-paste0(asa7b.int$total.adj.lci,"-",asa7b.int$total.adj.uci)
asa7b.nice.names<-asa7b.int[,c("vi.level","female.adj.pct","female.adj.ci","extrapolated.female.n","male.adj.pct","male.adj.ci","extrapolated.male.n","total.adj.pct","total.adj.ci","extrapolated.total.n")]
write.table(asa7b.nice.names,file=paste0(outdir,"/asa7b.csv"),row.names=F,col.names=T,sep=",")
names(asa7b.nice.names)<-c(" ","Adj. %", "95% CI", "Estimate","Adj. %", "95% CI", "Estimate","Adj. %", "95% CI", "Estimate")
knitr::kable(asa7b.nice.names, booktabs=T, linesep = "", caption = "Extrapolated magnitude of blindness (PVA <3/60), severe (PVA <6/60), moderate (PVA <6/18) and mild (PVA <6/12) vision impairment in the better eye due to cataract") %>%
kable_styling(full_width=T,latex_options = "HOLD_position") %>%
row_spec(0,italic=TRUE) %>%
column_spec(1,width='4cm') %>%
add_header_above(c("Vision impairment" = 1, "Female" = 3, "Male" = 3, "Total" = 3),bold=T)
source("PREV_14_RAAB5.R")
prev14.nice.names<-prev14
prev14$male.adjusted.ci<-paste0(prev14$male.adjusted.lci,"-",prev14$male.adjusted.uci)
prev14$female.adjusted.ci<-paste0(prev14$female.adjusted.lci,"-",prev14$female.adjusted.uci)
prev14$total.adjusted.ci<-paste0(prev14$total.adjusted.lci,"-",prev14$total.adjusted.uci)
prev14.nice.names$denom.thresh<-recode_factor(prev14.nice.names$denom.thresh,'612' = "<6/12",'618' = "<6/18", '660' = "<6/60",'360' = "<3/60")
prev14.nice.names$num.thresh<-recode_factor(prev14.nice.names$num.thresh,'csc' = "CSC",'ecsc_612' = "eCSC (outcome <6/12)", 'ecsc_618' = "eCSC (outcome <6/18)")
prev14a.nice.names<-prev14.nice.names[,c("denom.thresh","num.thresh","female.adjusted","female.adjusted.ci","male.adjusted","male.adjusted.ci","total.adjusted","total.adjusted.ci")]
View(prev14.nice.names)
source("PREV_14_RAAB5.R")
prev14.nice.names<-prev14
prev14.nice.names$male.adjusted.ci<-paste0(prev14.nice.names$male.adjusted.lci,"-",prev14.nice.names$male.adjusted.uci)
prev14.nice.names$female.adjusted.ci<-paste0(prev14.nice.names$female.adjusted.lci,"-",prev14.nice.names$female.adjusted.uci)
prev14.nice.names$total.adjusted.ci<-paste0(prev14.nice.names$total.adjusted.lci,"-",prev14.nice.names$total.adjusted.uci)
prev14.nice.names$denom.thresh<-recode_factor(prev14.nice.names$denom.thresh,'612' = "<6/12",'618' = "<6/18", '660' = "<6/60",'360' = "<3/60")
prev14.nice.names$num.thresh<-recode_factor(prev14.nice.names$num.thresh,'csc' = "CSC",'ecsc_612' = "eCSC (outcome <6/12)", 'ecsc_618' = "eCSC (outcome <6/18)")
prev14a.nice.names<-prev14.nice.names[,c("denom.thresh","num.thresh","female.adjusted","female.adjusted.ci","male.adjusted","male.adjusted.ci","total.adjusted","total.adjusted.ci")]
write.table(prev14a.nice.names,file=paste0(outdir,"/prev14a.csv"),row.names=F,col.names=T,sep=",")
names(prev14a.nice.names)<-c("Operable threshold","Operated threshold","Adj. %","95% CI","Adj. %","95% CI","Adj. %","95% CI")
knitr::kable(prev14a.nice.names, booktabs=T, linesep = "", caption = "Adjusted Cataract Surgical Coverage and Effective Cataract Surgical Coverage, by person") %>%
kable_styling(latex_options = c("scale_down","HOLD_position")) %>%
row_spec(0,italic=TRUE) %>%
column_spec(2,width='4cm') %>%
add_header_above(c(" " = 2, "Female" = 2, "Male" = 2, "Total" = 2),bold=T)
View(prev14a.nice.names)
source("OUTC_6.R")
objects()
rm(list = ls())
omp<-read.table("../Dropbox/Bert/GBR/sequencing/ompA_references/ompA_coverage.txt",sep=" ",header=T)
pmp<-read.table("../Dropbox/Bert/GBR/sequencing/pmpEFGH_references/pmp_coverage.txt",sep=" ",header=T)
trp<-read.table("../Dropbox/Bert/GBR/sequencing/trpA_references/trpA_coverage.txt",sep=" ",header=T)
tarp<-read.table("../Dropbox/Bert/GBR/sequencing/Tarp_references/Tarp_coverage.txt",sep=" ",header=T)
omp$top_hit<-colnames(omp[,2:12])[apply(omp[,2:12],1,which.max)]
pmp$top_hit<-colnames(pmp[,2:5])[apply(pmp[,2:5],1,which.max)]
trp$top_hit<-colnames(trp[,2:5])[apply(trp[,2:5],1,which.max)]
tarp$top_hit<-colnames(tarp[,2:5])[apply(tarp[,2:5],1,which.max)]
View(tarp)
View(pmp)
table(pmp$AHAR_pmpEFGH %in% omp$A_ompA)
table(pmp$AHAR_pmpEFGH %in% tarp$AHAR13_Tarp)
plot(pmp$AHAR_pmpEFGH,omp$A_ompA)
plot(tarp$AHAR13_Tarp,omp$A_ompA)
plot(tarp$AHAR13_Tarp,trp$Ct_AHAR_trpA)
View(trp)
pmps<-c("AHAR_pmpEFGH","EBour_pmpEFGH")
length(pmps)
names(omp)
names(trp)
names(tarp)
names(pmp)
plot(pmp[,4],trp[,4])
plot(pmp[,4],tarp[,4])
plot(pmp[,3],tarp[,3])
names(trp)
names(tarp)
tarp[,-5]
tarp<-tarp[,-5]
tarp
tarp$top_hit<-colnames(tarp[,2:4])[apply(tarp[,2:4],1,which.max)]
names(pmp)
pmp<-pmp[,-c(4:5)]
rm(list = ls())
omp<-read.table("../Dropbox/Bert/GBR/sequencing/ompA_references/ompA_coverage.txt",sep=" ",header=T)
pmp<-read.table("../Dropbox/Bert/GBR/sequencing/pmpEFGH_references/pmp_coverage.txt",sep=" ",header=T)
trp<-read.table("../Dropbox/Bert/GBR/sequencing/trpA_references/trpA_coverage.txt",sep=" ",header=T)
tarp<-read.table("../Dropbox/Bert/GBR/sequencing/Tarp_references/Tarp_coverage.txt",sep=" ",header=T)
names(tarp)
tarp<-tarp[,-5]
names(pmp)
pmp<-pmp[,-c(4:5)]
omp$top_hit<-colnames(omp[,2:12])[apply(omp[,2:12],1,which.max)]
pmp$top_hit<-colnames(pmp[,2:3])[apply(pmp[,2:3],1,which.max)]
tarp$top_hit<-colnames(tarp[,2:4])[apply(tarp[,2:4],1,which.max)]
table(tarp$top_hit)
table(omp$top_hit)
table(trp$top_hit)
View(trp)
trp$top_hit<-colnames(trp[,2:5])[apply(trp[,2:5],1,which.max)]
table(trp$top_hit)
table(pmp$top_hit)
table(tarp$top_hit)
omp$outfile<-paste0(omp$sample,"_",omp$top_hit,"_snps_and_indels.fasta")
View(omp)
omp$maxcov<-max(omp[,2:12])
trp$maxcov<-max(trp[,2:5])
pmp$maxcov<-max(pmp[,2:3])
tarp$maxcov<-max(tarp[,2:4])
View(omp)
max(omp[,2:12])
max(omp[1,2:12])
for (i in 1:nrow(omp)){omp$maxcov[i]<-max(omp[i,2:12])}
plot(omp$maxcov)
for (i in 1:nrow(omp)){omp$maxcov[i]<-max(omp[i,2:12])}
for (i in 1:nrow(trp)){trp$maxcov[i]<-max(trp[i,2:5])}
for (i in 1:nrow(pmp)){pmp$maxcov[i]<-max(pmp[i,2:3])}
for (i in 1:nrow(tarp)){tarp$maxcov[i]<-max(tarp[i,2:4])}
plot(omp$maxcov)
plot(trp$maxcov)
plot(pmpp$maxcov)
plot(pmp$maxcov)
plot(tarp$maxcov)
table(omp$maxcov>=0.95)
table(pmp$maxcov>=0.95)
table(tmp$maxcov>=0.95)
table(trp$maxcov>=0.95)
table(omp$maxcov>=0.95)
table(pmp$maxcov>=0.95)
table(trp$maxcov>=0.95)
table(tarp$maxcov>=0.95)
table(omp$maxcov>=0.9)
table(pmp$maxcov>=0.9)
table(trp$maxcov>=0.9)
table(tarp$maxcov>=0.9)
table(omp$maxcov>=0.9)
table(pmp$maxcov>=0.9)
table(trp$maxcov>=0.9)
table(tarp$maxcov>=0.9)
table(omp$maxcov>=0.9)
table(pmp$maxcov>=0.9)
table(trp$maxcov>=0.9)
table(tarp$maxcov>=0.9)
table(omp$maxcov>=0.95)
table(pmp$maxcov>=0.95)
table(trp$maxcov>=0.95)
table(tarp$maxcov>=0.95)
omp$outfile<-paste0(omp$sample,"_",omp$top_hit,"_snps_and_indels.fasta")
pmp$outfile<-paste0(pmp$sample,"_",pmp$top_hit,"_snps_and_indels.fasta")
trp$outfile<-paste0(trp$sample,"_",trp$top_hit,"_snps_and_indels.fasta")
tarp$outfile<-paste0(tarp$sample,"_",tarp$top_hit,"_snps_and_indels.fasta")
View(tarp)
ompi<-omp[omp$maxcov>=0.95,]
View(ompi)
ompi<-omp[omp$maxcov>=0.95,"outfile"]
write.table(ompi,"../Dropbox/Bert/GBR/sequencing/ompA_references/omp_max_coverage_list.tsv",sep="\t",header=F)
write.table(ompi,"../Dropbox/Bert/GBR/sequencing/ompA_references/omp_max_coverage_list.tsv",sep="\t",col.names=F)
tarpi<-tarp[tarp$maxcov>=0.95,"outfile"]
write.table(ompi,"../Dropbox/Bert/GBR/sequencing/ompA_references/omp_max_coverage_list.tsv",sep="\t",col.names=F)
write.table(pmpi,"../Dropbox/Bert/GBR/sequencing/pmpEFGH_references/pmp_max_coverage_list.tsv",sep="\t",col.names=F)
write.table(trpi,"../Dropbox/Bert/GBR/sequencing/trpA_references/trp_max_coverage_list.tsv",sep="\t",col.names=F)
write.table(tarpi,"../Dropbox/Bert/GBR/sequencing/Tarp_references/tarp_max_coverage_list.tsv",sep="\t",col.names=F)
ompi<-omp[omp$maxcov>=0.95,"outfile"]
trpi<-trp[trp$maxcov>=0.95,"outfile"]
tarpi<-tarp[tarp$maxcov>=0.95,"outfile"]
pmpi<-pmp[pmp$maxcov>=0.95,"outfile"]
write.table(ompi,"../Dropbox/Bert/GBR/sequencing/ompA_references/omp_max_coverage_list.tsv",sep="\t",col.names=F)
write.table(pmpi,"../Dropbox/Bert/GBR/sequencing/pmpEFGH_references/pmp_max_coverage_list.tsv",sep="\t",col.names=F)
write.table(trpi,"../Dropbox/Bert/GBR/sequencing/trpA_references/trp_max_coverage_list.tsv",sep="\t",col.names=F)
write.table(tarpi,"../Dropbox/Bert/GBR/sequencing/Tarp_references/tarp_max_coverage_list.tsv",sep="\t",col.names=F)
write.table(ompi,"../Dropbox/Bert/GBR/sequencing/ompA_references/omp_max_coverage_list.tsv",sep="\t",col.names=F,quote=F)
write.table(pmpi,"../Dropbox/Bert/GBR/sequencing/pmpEFGH_references/pmp_max_coverage_list.tsv",sep="\t",col.names=F,quote=F)
write.table(trpi,"../Dropbox/Bert/GBR/sequencing/trpA_references/trp_max_coverage_list.tsv",sep="\t",col.names=F,quote=F)
write.table(tarpi,"../Dropbox/Bert/GBR/sequencing/Tarp_references/tarp_max_coverage_list.tsv",sep="\t",col.names=F,quote=F)
write.table(ompi,"../Dropbox/Bert/GBR/sequencing/ompA_references/omp_max_coverage_list.tsv",sep="\t",col.names=F,row.names=F,quote=F)
write.table(pmpi,"../Dropbox/Bert/GBR/sequencing/pmpEFGH_references/pmp_max_coverage_list.tsv",sep="\t",col.names=F,row.names=F,quote=F)
write.table(trpi,"../Dropbox/Bert/GBR/sequencing/trpA_references/trp_max_coverage_list.tsv",sep="\t",col.names=F,row.names=F,quote=F)
write.table(tarpi,"../Dropbox/Bert/GBR/sequencing/Tarp_references/tarp_max_coverage_list.tsv",sep="\t",col.names=F,row.names=F,quote=F)
View(cot)
bum<-cot
immune <- lapply(immune, function(x) sub("^$", "N", x) )
bum <- lapply(bum, function(x) sub("^$", "N", x) )
View(bum)
83.326*2
68.721*3
x<-read.csv("../../Dropbox/Bert/GBR")
x<-read.csv("../../Dropbox/Bert/ETH/uk_lab_data/clean_PCR_data_for_analysis/pilot_p1_positives_sanger_adama_loads_qubit.csv")
require(readxl)
y<-read_xlsx("../../Dropbox/Bert/ETH/uk_lab_data/sequencing/StrongerSAFE.map2Har13.aln.N-counts.xls")
y<-read_xls("../../Dropbox/Bert/ETH/uk_lab_data/sequencing/StrongerSAFE.map2Har13.aln.N-counts.xls")
names(x)
names(y)
names(y)[1]<-"Sample.Name"
bum<-merge(x,y,by="Sample.Name",all=F)
plot(log10(bum$est_omcb_copies_ul),bum$`GoodCov_<25%Nsites`)
plot(log10(bum$est_omcb_copies_ul),bum$N_proportion)
plot(log10(bum$est_omcb_copies_ul),1-bum$N_proportion,xlab="omcB copies/uL",ylab="%ATCG (5X)",xaxt='n',yaxt='n',pch=20,col="red")
plot(log10(bum$est_omcb_copies_ul),1-bum$N_proportion,xlab="omcB copies/uL",ylab="%ATCG (5X)",xaxt='n',yaxt='n',pch=20,col="red",bty='n')
axis(1,at=c(-10,-2,-1,0,1,2,3,4,5,6,7),labels=c(-10,10^-2,10^-1,10^0,10^1,10^2,10^3,10^4,10^5,10^6,10^7),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
abline(v=2,lty=3,col="blue")
plot(log10(bum$est_RPP30_copies_ul),1-bum$N_proportion,xlab="RPP30 copies/uL",ylab="%ATCG (5X)",xaxt='n',yaxt='n',pch=20,col="red",bty='n')
axis(1,at=c(-10,-2,-1,0,1,2,3,4,5,6,7),labels=c(-10,10^-2,10^-1,10^0,10^1,10^2,10^3,10^4,10^5,10^6,10^7),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
abline(v=2,lty=3,col="blue")
plot(log10(bum$ng_in_36_ul),1-bum$N_proportion,xlab="RPP30 copies/uL",ylab="%ATCG (5X)",xaxt='n',yaxt='n',pch=20,col="red",bty='n')
axis(1,at=c(-10,-2,-1,0,1,2,3,4,5,6,7),labels=c(-10,10^-2,10^-1,10^0,10^1,10^2,10^3,10^4,10^5,10^6,10^7),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
plot(log10(bum$ng_in_36_ul),1-bum$N_proportion,xlab="Total DNA yield (ng)",ylab="%ATCG (5X)",xaxt='n',yaxt='n',pch=20,col="red",bty='n')
axis(1,at=c(-10,-2,-1,0,1,2,3,4,5,6,7),labels=c(-10,10^-2,10^-1,10^0,10^1,10^2,10^3,10^4,10^5,10^6,10^7),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
plot(bum$ng_in_36_ul,1-bum$N_proportion,xlab="Total DNA yield (ng)",ylab="%ATCG (5X)",xaxt='n',yaxt='n',pch=20,col="red",bty='n')
plot(log10(bum$ng_in_36_ul),1-bum$N_proportion,xlab="Total DNA yield (ng)",ylab="%ATCG (5X)",xaxt='n',yaxt='n',pch=20,col="red",bty='n')
axis(1,at=c(-10,-2,-1,0,1,2,3,4,5,6,7),labels=c(-10,10^-2,10^-1,10^0,10^1,10^2,10^3,10^4,10^5,10^6,10^7),cex.axis=0.8)
plot(log10(bum$omcb_Ct),1-bum$N_proportion,xlab="Total DNA yield (ng)",ylab="%ATCG (5X)",xaxt='n',yaxt='n',pch=20,col="red",bty='n')
axis(1,at=c(-10,-2,-1,0,1,2,3,4,5,6,7),labels=c(-10,10^-2,10^-1,10^0,10^1,10^2,10^3,10^4,10^5,10^6,10^7),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
plot(log10(bum$omcb_Ct),1-bum$N_proportion,xlab="omcB CT",ylab="%ATCG (5X)",xaxt='n',yaxt='n',pch=20,col="red",bty='n')
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
plot(log10(bum$omcb_Ct),1-bum$N_proportion,xlab="omcB CT",ylab="%ATCG (5X)",yaxt='n',pch=20,col="red",bty='n')
plot(bum$omcb_Ct,1-bum$N_proportion,xlab="omcB CT",ylab="%ATCG (5X)",yaxt='n',pch=20,col="red",bty='n')
#axis(1,at=c(-10,-2,-1,0,1,2,3,4,5,6,7),labels=c(-10,10^-2,10^-1,10^0,10^1,10^2,10^3,10^4,10^5,10^6,10^7),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
axis(1,at=c(-10,20,25,30,35,40),labels=c(-10,20,25,30,35,40),cex.axis=0.8)
plot(log10(bum$est_omcb_copies_ul),1-bum$N_proportion,xlab="omcB copies/uL",ylab="%ATCG (5X)",xaxt='n',yaxt='n',pch=20,col="red",bty='n')
axis(1,at=c(-10,-2,-1,0,1,2,3,4,5,6,7),labels=c(-10,10^-2,10^-1,10^0,10^1,10^2,10^3,10^4,10^5,10^6,10^7),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
abline(v=2,lty=3,col="blue")
plot(bum$omcb_Ct,1-bum$N_proportion,xlab="omcB CT",ylab="%ATCG (5X)",yaxt='n',pch=20,col="red",bty='n')
axis(1,at=c(-10,20,25,30,35,40),labels=c(-10,20,25,30,35,40),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
plot(bum$omcb_Ct,1-bum$N_proportion,xlab="omcB CT",ylab="%ATCG (5X)",yaxt='n',pch=20,col="red",bty='n',xaxt='n')
axis(1,at=c(-10,20,25,30,35,40),labels=c(-10,20,25,30,35,40),cex.axis=0.8)
abline(v=31,lty=3,col="blue")
plot(bum$VIC_Ct,1-bum$N_proportion,xlab="omcB CT",ylab="%ATCG (5X)",yaxt='n',pch=20,col="red",bty='n',xaxt='n')
axis(1,at=c(-10,20,25,30,35,40),labels=c(-10,20,25,30,35,40),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
abline(v=31,lty=3,col="blue")
bum$VIC_Ct[bum$VIC_Ct<15]<-NA
plot(bum$VIC_Ct,1-bum$N_proportion,xlab="omcB CT",ylab="%ATCG (5X)",yaxt='n',pch=20,col="red",bty='n',xaxt='n')
axis(1,at=c(-10,20,25,30,35,40),labels=c(-10,20,25,30,35,40),cex.axis=0.8)
plot(log10(bum$est_omcb_copies_ul),1-bum$N_proportion,xlab="LSHTM omcB copies/uL",ylab="%ATCG (5X)",xaxt='n',yaxt='n',pch=20,col="red",bty='n')
axis(1,at=c(-10,-2,-1,0,1,2,3,4,5,6,7),labels=c(-10,10^-2,10^-1,10^0,10^1,10^2,10^3,10^4,10^5,10^6,10^7),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
abline(v=2,lty=3,col="blue")
plot(bum$omcb_Ct,1-bum$N_proportion,xlab="LSHTM omcB CT",ylab="%ATCG (5X)",yaxt='n',pch=20,col="red",bty='n',xaxt='n')
axis(1,at=c(-10,20,25,30,35,40),labels=c(-10,20,25,30,35,40),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
abline(v=31,lty=3,col="blue")
bum$VIC_Ct[bum$VIC_Ct<15]<-NA
plot(bum$VIC_Ct,1-bum$N_proportion,xlab="omcB CT",ylab="%ATCG (5X)",yaxt='n',pch=20,col="red",bty='n',xaxt='n')
plot(log10(bum$est_omcb_copies_ul),1-bum$N_proportion,xlab="omcB copies/uL (LSHTM qPCR)",ylab="%ATCG (5X)",xaxt='n',yaxt='n',pch=20,col="red",bty='n')
axis(1,at=c(-10,-2,-1,0,1,2,3,4,5,6,7),labels=c(-10,10^-2,10^-1,10^0,10^1,10^2,10^3,10^4,10^5,10^6,10^7),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
abline(v=2,lty=3,col="blue")
plot(bum$omcb_Ct,1-bum$N_proportion,xlab="omcB CT (LSHTM qPCR)",ylab="%ATCG (5X)",yaxt='n',pch=20,col="red",bty='n',xaxt='n')
axis(1,at=c(-10,20,25,30,35,40),labels=c(-10,20,25,30,35,40),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
abline(v=31,lty=3,col="blue")
bum$VIC_Ct[bum$VIC_Ct<15]<-NA
plot(bum$VIC_Ct,1-bum$N_proportion,xlab="MOMP CT (sanger qPCR)",ylab="%ATCG (5X)",yaxt='n',pch=20,col="red",bty='n',xaxt='n')
axis(1,at=c(-10,20,25,30,35,40),labels=c(-10,20,25,30,35,40),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
abline(v=31,lty=3,col="blue")
plot(bum$VIC_Ct,1-bum$N_proportion,xlab="MOMP CT (sanger qPCR)",ylab="%ATCG (5X)",yaxt='n',pch=20,col="red",bty='n',xaxt='n')
axis(1,at=c(-10,20,25,30,35,40),labels=c(-10,20,25,30,35,40),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
abline(v=33,lty=3,col="blue")
plot(log10(bum$est_omcb_copies_ul),1-bum$N_proportion,xlab="omcB copies/uL (Adama qPCR)",ylab="%ATCG (5X)",xaxt='n',yaxt='n',pch=20,col="red",bty='n')
axis(1,at=c(-10,-2,-1,0,1,2,3,4,5,6,7),labels=c(-10,10^-2,10^-1,10^0,10^1,10^2,10^3,10^4,10^5,10^6,10^7),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
abline(v=2,lty=3,col="blue")
plot(bum$omcb_Ct,1-bum$N_proportion,xlab="omcB CT (Adama qPCR)",ylab="%ATCG (5X)",yaxt='n',pch=20,col="red",bty='n',xaxt='n')
axis(1,at=c(-10,20,25,30,35,40),labels=c(-10,20,25,30,35,40),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
abline(v=31,lty=3,col="blue")
par(mar=c(1,2))
par(mfrow=c(1,2))
plot(log10(bum$est_omcb_copies_ul),1-bum$N_proportion,xlab="omcB copies/uL (Adama qPCR)",ylab="%ATCG (5X)",xaxt='n',yaxt='n',pch=20,col="red",bty='n')
axis(1,at=c(-10,-2,-1,0,1,2,3,4,5,6,7),labels=c(-10,10^-2,10^-1,10^0,10^1,10^2,10^3,10^4,10^5,10^6,10^7),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
abline(v=2,lty=3,col="blue")
plot(bum$omcb_Ct,1-bum$N_proportion,xlab="omcB CT (Adama qPCR)",ylab="%ATCG (5X)",yaxt='n',pch=20,col="red",bty='n',xaxt='n')
axis(1,at=c(-10,20,25,30,35,40),labels=c(-10,20,25,30,35,40),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
abline(v=31,lty=3,col="blue")
summary(bum$omcb_Ct[bum$N_proportion<0.2])
plot(log10(bum$est_omcb_copies_ul),1-bum$N_proportion,xlab="omcB copies/uL (Adama qPCR)",ylab="%ATCG (5X)",xaxt='n',yaxt='n',pch=20,col="red",bty='n')
axis(1,at=c(-10,-2,-1,0,1,2,3,4,5,6,7),labels=c(-10,10^-2,10^-1,10^0,10^1,10^2,10^3,10^4,10^5,10^6,10^7),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
abline(v=2,lty=3,col="blue")
plot(bum$omcb_Ct,1-bum$N_proportion,xlab="omcB CT (Adama qPCR)",ylab="%ATCG (5X)",yaxt='n',pch=20,col="red",bty='n',xaxt='n')
axis(1,at=c(-10,20,25,30,35,40),labels=c(-10,20,25,30,35,40),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
abline(v=33,lty=3,col="blue")
Cairo("../../Dropbox/Bert/ETH/uk_lab_data/sequencing/5x_coverage_v_load.png",type="png",dpi=300,width=10,height=6,units='cm',canvas="white",bg="white")
require(Cairo)
Cairo("../../Dropbox/Bert/ETH/uk_lab_data/sequencing/5x_coverage_v_load.png",type="png",dpi=300,width=10,height=6,units='cm',canvas="white",bg="white")
par(mfrow=c(1,2))
plot(log10(bum$est_omcb_copies_ul),1-bum$N_proportion,xlab="omcB copies/uL (Adama qPCR)",ylab="%ATCG (5X)",xaxt='n',yaxt='n',pch=20,col="red",bty='n')
axis(1,at=c(-10,-2,-1,0,1,2,3,4,5,6,7),labels=c(-10,10^-2,10^-1,10^0,10^1,10^2,10^3,10^4,10^5,10^6,10^7),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
abline(v=2,lty=3,col="blue")
plot(bum$omcb_Ct,1-bum$N_proportion,xlab="omcB CT (Adama qPCR)",ylab="%ATCG (5X)",yaxt='n',pch=20,col="red",bty='n',xaxt='n')
axis(1,at=c(-10,20,25,30,35,40),labels=c(-10,20,25,30,35,40),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
abline(v=33,lty=3,col="blue")
dev.off()
Cairo("../../Dropbox/Bert/ETH/uk_lab_data/sequencing/5x_coverage_v_load.png",type="png",dpi=300,width=10,height=6,units='cm',canvas="white",bg="white",pointsize=5)
par(mfrow=c(1,2))
plot(log10(bum$est_omcb_copies_ul),1-bum$N_proportion,xlab="omcB copies/uL (Adama qPCR)",ylab="%ATCG (5X)",xaxt='n',yaxt='n',pch=20,col="red",bty='n')
axis(1,at=c(-10,-2,-1,0,1,2,3,4,5,6,7),labels=c(-10,10^-2,10^-1,10^0,10^1,10^2,10^3,10^4,10^5,10^6,10^7),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
abline(v=2,lty=3,col="blue")
plot(bum$omcb_Ct,1-bum$N_proportion,xlab="omcB CT (Adama qPCR)",ylab="%ATCG (5X)",yaxt='n',pch=20,col="red",bty='n',xaxt='n')
axis(1,at=c(-10,20,25,30,35,40),labels=c(-10,20,25,30,35,40),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
abline(v=33,lty=3,col="blue")
dev.off()
Cairo("../../Dropbox/Bert/ETH/uk_lab_data/sequencing/5x_coverage_v_load.png",type="png",dpi=300,width=10,height=6,units='cm',canvas="white",bg="white",pointsize=5)
par(mfrow=c(1,2))
plot(log10(bum$est_omcb_copies_ul),1-bum$N_proportion,xlab="omcB copies/uL (Adama qPCR)",ylab="%ATCG (5X)",xaxt='n',yaxt='n',pch=20,col="red",bty='n')
axis(1,at=c(-10,-2,-1,0,1,2,3,4,5,6,7),labels=c(-10,10^-2,10^-1,10^0,10^1,10^2,10^3,10^4,10^5,10^6,10^7),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
abline(v=2,lty=3,col="blue")
plot(bum$omcb_Ct,1-bum$N_proportion,xlab="omcB CT (Adama qPCR)",ylab="%ATCG (5X)",yaxt='n',pch=20,col="red",bty='n',xaxt='n')
axis(1,at=c(-10,20,25,30,35,40),labels=c(-10,20,25,30,35,40),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
abline(v=32.5,lty=3,col="blue")
dev.off()
abline(v=32.5,lty=c(1,9),col="blue")
abline(v=32.5,lty=c(1,9,5),col="blue")
abline(v=32.5,lty="19",col="blue")
plot(bum$omcb_Ct,1-bum$N_proportion,xlab="omcB CT (Adama qPCR)",ylab="%ATCG (5X)",yaxt='n',pch=20,col="red",bty='n',xaxt='n')
axis(1,at=c(-10,20,25,30,35,40),labels=c(-10,20,25,30,35,40),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
abline(v=32.5,lty="19",col="blue")
dev.off()
Cairo("../../Dropbox/Bert/ETH/uk_lab_data/sequencing/5x_coverage_v_load.png",type="png",dpi=300,width=10,height=6,units='cm',canvas="white",bg="white",pointsize=5)
par(mfrow=c(1,2))
plot(log10(bum$est_omcb_copies_ul),1-bum$N_proportion,xlab="omcB copies/uL (Adama qPCR)",ylab="%ATCG (5X)",xaxt='n',yaxt='n',pch=20,col="red",bty='n')
axis(1,at=c(-10,-2,-1,0,1,2,3,4,5,6,7),labels=c(-10,10^-2,10^-1,10^0,10^1,10^2,10^3,10^4,10^5,10^6,10^7),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
abline(v=2,lty="19",col="blue")
plot(bum$omcb_Ct,1-bum$N_proportion,xlab="omcB CT (Adama qPCR)",ylab="%ATCG (5X)",yaxt='n',pch=20,col="red",bty='n',xaxt='n')
axis(1,at=c(-10,20,25,30,35,40),labels=c(-10,20,25,30,35,40),cex.axis=0.8)
axis(2,at=c(-100,0,0.2,0.4,0.6,0.8,1),labels=c(-10,0,20,40,60,80,100),las=2,cex.axis=0.8)
abline(v=32.5,lty="19",col="blue")
dev.off()
require("readxl")
x<-read_xlsx("../../Dropbox/Bert/ETH/gebeyehu_data/RCT REDVIC INCNED Plate07.xls",sheet=3,omit=39)
x<-read_xlsx("../../Dropbox/Bert/ETH/gebeyehu_data/RCT REDVIC INCNED Plate07.xls",sheet=3)
x<-read_xls("../../Dropbox/Bert/ETH/gebeyehu_data/RCT REDVIC INCNED Plate07.xls",sheet=3)
x
View(x)
x<-read_xls("../../Dropbox/Bert/ETH/gebeyehu_data/RCT REDVIC INCNED Plate07.xls",sheet=3,skip=41)
table(x$CT<40,x$Reporter)
y<-read_xls("../../Dropbox/Bert/ETH/22. Laboratory Results/Results/trial/2021-08-06 RCT-BL Ocular swabs Run-7.xls")
y<-read_xls("../../Dropbox/Bert/ETH/22. Laboratory Results/Results/trial/2021-08-06 RCT-BL Ocular swabs Run-7.xls",sheet=3,skip=41)
table(y$CT<40,y$Reporter)
x_pos<-x$`Sample Name`[x$CT<40 & x$Reporter=="NED"]
y_pos<-y$`Sample Name`[y$CT<40 & y$Reporter=="NED"]
bum<-x_pos[!(x_pos %in% y_pos)]
x_well<-x$Well[x$CT<40 & x$Reporter=="NED"]
y_well<-y$`Sample Name`[y$CT<40 & y$Reporter=="NED"]
boob<-x_well[!(x_well %in% y_well)]
y_well<-y$Well[y$CT<40 & y$Reporter=="NED"]
boob<-x_well[!(x_well %in% y_well)]
x_well<-x$`Well Position`[x$CT<40 & x$Reporter=="NED"]
y_well<-y$`Well Position`[y$CT<40 & y$Reporter=="NED"]
boob<-x_well[!(x_well %in% y_well)]
plot(x$CT[x$Reporter=="NED"],y$CT[y$Reporter=="NED"])
abline(a=1,b=0)
abline(a=0,b=1)
require(rmarkdown)
require(readxl)
rm(list = ls())
path.to.raab<-"C:/Users/icrurbut/Dropbox/Bert/GBR/RAAB/"
path.to.pop<-"C:/Users/icrurbut/Dropbox/Bert/GBR/RAAB/"
setwd("C:/Users/icrurbut/Dropbox/Bert/GBR/RAAB/")
require(rmarkdown)
require(readxl)
rm(list = ls())
setwd("C:/Users/icrurbut/Dropbox/Bert/GBR/RAAB/")
path.to.raab<-"C:/Users/icrurbut/Dropbox/Bert/GBR/RAAB/"
path.to.pop<-"C:/Users/icrurbut/Dropbox/Bert/GBR/RAAB/"
meta<-read_xlsx(paste0(path.to.raab,"raab-log_v5.xlsx"),sheet=1)
meta[meta=="NA"]<-NA
#meta<-meta[meta$Bert=="y",]
meta<-meta[!is.na(meta$raab_id),]
fulls<-meta[meta$repo_meta==TRUE & meta$repo_data==TRUE,]
fulls<-fulls[!is.na(fulls$raab_id),]
empties<-meta[meta$repo_meta==TRUE & meta$repo_data==FALSE,]
empties<-empties[!is.na(empties$raab_id),]
emptids<-unique(empties$raab_id)
mrm_vars<-c("raab_id","survey_title","year_end","iso_2","level1","level2","osm_id","iso3166-1","iso3166-2","admin_level","national","sample_size","response_rate","raab_version","va_threshold","raab_dr","raab_wgq","iceh_data","pi_name","pi_institution","pi_email1","trainer_name","trainer_email1","implementing_org","facilitating_org","funder","pub_doi1","pub_doi2","pub_doi3")
setwd("C:/Users/icrurbut/Dropbox/Bert/GBR/RAAB/RAAB5_scripts/")
path.to.scripts<-"C:/Users/icrurbut/Dropbox/Bert/GBR/RAAB/RAAB5_scripts/"
getwd()
path.to.scripts<-"RAAB5_scripts/"
setwd("RAAB5_scripts/")
setwd("github_repo_sync/RAAB5_scripts/")
path.to.scripts<-"C:/Users/icrurbut/Dropbox/Bert/GBR/RAAB/github_repo_sync/RAAB5_scripts/"
raab5<-read.csv(paste0(path.to.raab,"raabs_618_repo.csv"))
raab5<-read.csv(paste0(path.to.raab,"raabs_618.csv"))
raab5ids_all<-as.data.frame(unique(raab5$raab_id))
raab5ids<-raab5ids_all[raab5ids_all$`unique(raab5$raab_id)` %in% fulls$raab_id,]
remove(raab5)
raab5ids[1]
k=1
#for (k in 1:length(raab5ids))
#for (k in 1:3)
#{
ID<-raab5ids[k]
if(file.exists(ID)){outdir<-ID}else{dir.create(ID);outdir<-ID}
dir.create(paste0(ID,"/summary"))
dir.create(paste0(ID,"/summary/data"))
dir.create(paste0(ID,"/raw"))
dir.create(paste0(ID,"/raw/data"))
render(paste0(path.to.scripts,"RAAB5_reporter.Rmd"), output_file = paste0(ID,"_","report"), output_dir = paste0(outdir,"/summary"))
list.files
list.files()
path.to.pop
render(paste0(path.to.scripts,"RAAB5_reporter.Rmd"), output_file = paste0(ID,"_","report"), output_dir = paste0(outdir,"/summary"))
